{"version":3,"sources":["js/hoscroll.js"],"names":["availableToReveal","console","log","container","document","getElementById","startOffset","containerHeight","clientHeight","containerStart","getBoundingClientRect","top","window","pageYOffset","containerEnd","words","getElementsByTagName","textContainer","getElementsByClassName","textContainerContent","pixelsPerWord","Math","round","length","concat","getCurrentScroll","documentElement","scrollTop","body","fitText","fontSize","offsetWidth","offsetHeight","style","revealActiveWords","currentScrollPosition","activeWords","containerCurrentScroll","i","opacity","addEventListener"],"mappings":"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","file":"hoscroll.586ae427.js","sourceRoot":"../src","sourcesContent":["let availableToReveal = false;\nconsole.log('here in hoes')\n// container\nconst container = document.getElementById(\"reveal\");\n\nconst startOffset = 860; // pixels\n\nconst containerHeight = container.clientHeight;\nconst containerStart = container.getBoundingClientRect().top + window.pageYOffset - startOffset;\nconst containerEnd = containerStart + containerHeight;\n\n// gets all words\nconst words = container.getElementsByTagName(\"span\");\nconst textContainer = container.getElementsByClassName(\"text\")[0];\nconst textContainerContent = textContainer.getElementsByTagName(\"p\")[0];\n\n// gets the amount of pixels per each word (halved to make it twice as fast)\nconst pixelsPerWord = Math.round(containerHeight / words.length / 2);\n\nconsole.log(`Container height: ${containerHeight}px`);\nconsole.log(`Container start: ${containerStart}px`);\nconsole.log(`Container end: ${containerEnd}px`);\nconsole.log(`Words count: ${words.length}`);\nconsole.log(`Pixels per word: ${pixelsPerWord}px`);\n\n// returns the current scroll position of the page\nconst getCurrentScroll = () => {\n    return document.documentElement.scrollTop || document.body.scrollTop;\n};\n\n// reveals the active words\nconst fitText = () => {\n    let fontSize = 52;\n\n    while (\n        textContainerContent.offsetWidth > textContainer.offsetWidth ||\n        textContainerContent.offsetHeight > textContainer.offsetHeight\n    ) {\n        fontSize--;\n\n        if (fontSize <= 10) {\n            break;\n        }\n\n        textContainerContent.style.fontSize = fontSize + \"px\";\n    }\n\n    console.log(`Fitted font size: ${fontSize}px`);\n};\n\nconst revealActiveWords = () => {\n    const currentScrollPosition = getCurrentScroll();\n\n    let activeWords;\n    const containerCurrentScroll = currentScrollPosition - containerStart;\n\n    // gets the number of active words\n    if (currentScrollPosition > containerEnd) {\n        activeWords = words.length;\n    } else if (currentScrollPosition < containerStart) {\n        activeWords = 0;\n    } else {\n        availableToReveal = true;\n        activeWords = Math.round(containerCurrentScroll / pixelsPerWord);\n    }\n\n    console.log(`Current scroll position: ${currentScrollPosition}px`);\n    console.log(`Active words: ${activeWords}`);\n\n    if (availableToReveal) {\n        for (var i = 0; i < words.length; i++) {\n            if (activeWords > i) {\n                words[i].style.opacity = 1;\n            } else {\n                words[i].style.opacity = 0.1;\n            }\n        }\n    }\n\n    if (\n        currentScrollPosition > containerEnd ||\n        currentScrollPosition < containerStart\n    ) {\n        availableToReveal = false;\n    }\n\n    console.log(`Available to reveal: ${availableToReveal}`);\n};\n\n// init\nfitText();\nrevealActiveWords();\n\ndocument.addEventListener(\"scroll\", () => {\n    revealActiveWords();\n});\n\nwindow.addEventListener(\"resize\", () => {\n    fitText();\n    console.log(\"Window resized, text refitted\");\n});\n\n"]}