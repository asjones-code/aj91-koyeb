{"id":"../node_modules/pixi.js/lib/environment/adapter.mjs","dependencies":[{"name":"/Users/adamjones/Development/aj91-koyeb/node_modules/pixi.js/lib/environment/adapter.mjs.map","includedInParent":true,"mtime":1730294322536},{"name":"/Users/adamjones/Development/aj91-koyeb/package.json","includedInParent":true,"mtime":1730294323806},{"name":"/Users/adamjones/Development/aj91-koyeb/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1730294322533},{"name":"../environment-browser/BrowserAdapter.mjs","loc":{"line":1,"column":31,"index":31},"parent":"/Users/adamjones/Development/aj91-koyeb/node_modules/pixi.js/lib/environment/adapter.mjs","resolved":"/Users/adamjones/Development/aj91-koyeb/node_modules/pixi.js/lib/environment-browser/BrowserAdapter.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DOMAdapter = void 0;\nvar _BrowserAdapter = require(\"../environment-browser/BrowserAdapter.mjs\");\n\"use strict\";\nlet currentAdapter = _BrowserAdapter.BrowserAdapter;\nconst DOMAdapter = exports.DOMAdapter = {\n  /**\n   * Returns the current adapter.\n   * @returns {environment.Adapter} The current adapter.\n   */\n  get() {\n    return currentAdapter;\n  },\n  /**\n   * Sets the current adapter.\n   * @param adapter - The new adapter.\n   */\n  set(adapter) {\n    currentAdapter = adapter;\n  }\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":53,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":9,"column":4}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":53,"column":30},"generated":{"line":9,"column":18}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":53,"column":30},"generated":{"line":9,"column":21}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":53,"column":30},"generated":{"line":9,"column":51}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":7},"generated":{"line":10,"column":0}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":10,"column":6}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":10,"column":16}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":10,"column":19}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":10,"column":26}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":10,"column":27}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":10,"column":37}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":10,"column":40}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":11,"column":2}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":12,"column":0}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":13,"column":0}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":14,"column":0}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":79,"column":4},"generated":{"line":15,"column":2}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":80,"column":4},"generated":{"line":15,"column":5}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":80,"column":4},"generated":{"line":15,"column":6}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":80,"column":4},"generated":{"line":15,"column":8}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":81,"column":15},"generated":{"line":16,"column":4}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":81,"column":15},"generated":{"line":16,"column":11}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":81,"column":15},"generated":{"line":16,"column":25}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":81,"column":15},"generated":{"line":17,"column":2}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":82,"column":4},"generated":{"line":17,"column":3}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":82,"column":4},"generated":{"line":18,"column":2}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":82,"column":4},"generated":{"line":19,"column":0}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":82,"column":4},"generated":{"line":20,"column":0}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":82,"column":4},"generated":{"line":21,"column":0}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":87,"column":4},"generated":{"line":22,"column":2}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":87,"column":4},"generated":{"line":22,"column":5}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":87,"column":8},"generated":{"line":22,"column":6}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":22,"column":13}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":22,"column":15}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":89,"column":25},"generated":{"line":23,"column":4}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":89,"column":25},"generated":{"line":23,"column":18}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":89,"column":25},"generated":{"line":23,"column":21}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":89,"column":25},"generated":{"line":23,"column":28}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":89,"column":25},"generated":{"line":24,"column":2}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":91,"column":0},"generated":{"line":25,"column":0}},{"source":"../../src/environment/adapter.ts","name":null,"original":{"line":91,"column":0},"generated":{"line":25,"column":1}}],"sources":{"../../src/environment/adapter.ts":"import { BrowserAdapter } from '../environment-browser/BrowserAdapter';\n\nimport type { ICanvas } from './canvas/ICanvas';\nimport type { ICanvasRenderingContext2D } from './canvas/ICanvasRenderingContext2D';\n\n/**\n * PixiJS supports multiple environments including browsers, Web Workers, and Node.js.\n * The environment is auto-detected by default using the {@link environment.autoDetectEnvironment} function.\n *\n * The {@link environment.Adapter} interface provides a way to abstract away the differences between\n * these environments. PixiJS uses the {@link environment.BrowserAdapter} by default.\n *\n * However you can manually set the environment using the {@link environment.DOMAdapter} singleton, for example to\n * use Pixi within a WebWorker.\n * ```js\n * import { DOMAdapter, WebWorkerAdapter } from 'pixi.js';\n *\n * // WebWorkerAdapter is an implementation of the Adapter interface\n * DOMAdapter.set(WebWorkerAdapter);\n *\n * // use the adapter to create a canvas (in this case an OffscreenCanvas)\n * DOMAdapter.get().createCanvas(800, 600);\n * ```\n * @namespace environment\n */\n\n/**\n * This interface describes all the DOM dependent calls that Pixi makes throughout its codebase.\n * Implementations of this interface can be used to make sure Pixi will work in any environment,\n * such as browser, Web Workers, and Node.js.\n * @memberof environment\n */\nexport interface Adapter\n{\n    /** Returns a canvas object that can be used to create a webgl context. */\n    createCanvas: (width?: number, height?: number) => ICanvas;\n    /** Returns a 2D rendering context. */\n    getCanvasRenderingContext2D: () => { prototype: ICanvasRenderingContext2D; };\n    /** Returns a WebGL rendering context. */\n    getWebGLRenderingContext: () => typeof WebGLRenderingContext;\n    /** Returns a partial implementation of the browsers window.navigator */\n    getNavigator: () => { userAgent: string, gpu: GPU | null };\n    /** Returns the current base URL For browser environments this is either the document.baseURI or window.location.href */\n    getBaseUrl: () => string;\n    /** Return the font face set if available */\n    getFontFaceSet: () => FontFaceSet | null;\n    /** Returns a Response object that has been fetched from the given URL. */\n    fetch: (url: RequestInfo, options?: RequestInit) => Promise<Response>;\n    /** Returns Document object that has been parsed from the given XML string. */\n    parseXML: (xml: string) => Document;\n}\n\nlet currentAdapter: Adapter = BrowserAdapter;\n\n/**\n * The DOMAdapter is a singleton that allows PixiJS to perform DOM operations, such as creating a canvas.\n * This allows PixiJS to be used in any environment, such as a web browser, Web Worker, or Node.js.\n * It uses the {@link environment.Adapter} interface to abstract away the differences between these environments\n * and uses the {@link environment.BrowserAdapter} by default.\n *\n * It has two methods: `get():Adapter` and `set(adapter: Adapter)`.\n *\n * Defaults to the {@link environment.BrowserAdapter}.\n * @example\n * import { DOMAdapter, WebWorkerAdapter } from 'pixi.js';\n *\n * // WebWorkerAdapter is an implementation of the Adapter interface\n * DOMAdapter.set(WebWorkerAdapter);\n *\n * // use the adapter to create a canvas (in this case an OffscreenCanvas)\n * DOMAdapter.get().createCanvas(800, 600);\n * @memberof environment\n */\nexport const DOMAdapter = {\n    /**\n     * Returns the current adapter.\n     * @returns {environment.Adapter} The current adapter.\n     */\n    get(): Adapter\n    {\n        return currentAdapter;\n    },\n    /**\n     * Sets the current adapter.\n     * @param adapter - The new adapter.\n     */\n    set(adapter: Adapter): void\n    {\n        currentAdapter = adapter;\n    },\n};\n"},"lineCount":null}},"error":null,"hash":"c3d776e0f9abcab7be8d555f555b931d","cacheData":{"env":{}}}