{"id":"../node_modules/pixi.js/lib/culling/cullingMixin.mjs","dependencies":[{"name":"/Users/adamjones/Development/aj91-koyeb/node_modules/pixi.js/lib/culling/cullingMixin.mjs.map","includedInParent":true,"mtime":1730294322814},{"name":"/Users/adamjones/Development/aj91-koyeb/package.json","includedInParent":true,"mtime":1730294323806},{"name":"/Users/adamjones/Development/aj91-koyeb/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1730294322533}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cullingMixin = void 0;\nconst cullingMixin = exports.cullingMixin = {\n  cullArea: null,\n  cullable: false,\n  cullableChildren: true\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":30,"column":7},"generated":{"line":7,"column":0}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":7,"column":6}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":30,"column":53},"generated":{"line":7,"column":18}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":30,"column":53},"generated":{"line":7,"column":21}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":30,"column":53},"generated":{"line":7,"column":28}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":30,"column":53},"generated":{"line":7,"column":29}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":30,"column":53},"generated":{"line":7,"column":41}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":30,"column":53},"generated":{"line":7,"column":44}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":8,"column":2}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":31,"column":14},"generated":{"line":8,"column":10}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":31,"column":14},"generated":{"line":8,"column":12}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":31,"column":14},"generated":{"line":8,"column":16}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":9,"column":2}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":32,"column":14},"generated":{"line":9,"column":10}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":32,"column":14},"generated":{"line":9,"column":12}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":32,"column":14},"generated":{"line":9,"column":17}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":10,"column":2}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":33,"column":22},"generated":{"line":10,"column":18}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":33,"column":22},"generated":{"line":10,"column":20}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/culling/cullingMixin.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":11,"column":1}}],"sources":{"../../src/culling/cullingMixin.ts":"import type { Rectangle } from '../maths/shapes/Rectangle';\n\nexport interface CullingMixinConstructor\n{\n    /**\n     * If set, this shape is used for culling instead of the bounds of this object.\n     * It can improve the culling performance of objects with many children.\n     * The culling area is defined in local space.\n     * @memberof scene.Container#\n     */\n    cullArea: Rectangle,\n    /**\n     * Should this object be rendered if the bounds of this object are out of frame?\n     *\n     * Culling has no effect on whether updateTransform is called.\n     * @default false\n     * @memberof scene.Container#\n     */\n    cullable: boolean,\n    /**\n     * Determines if the children to the container can be culled\n     * Setting this to false allows PixiJS to bypass a recursive culling function\n     * Which can help to optimize very complex scenes\n     * @default true\n     * @memberof scene.Container#\n     */\n    cullableChildren: boolean,\n}\n\nexport const cullingMixin: CullingMixinConstructor = {\n    cullArea: null,\n    cullable: false,\n    cullableChildren: true,\n};\n"},"lineCount":null}},"error":null,"hash":"52b3b49184bf320bdde2af335b3d8176","cacheData":{"env":{}}}