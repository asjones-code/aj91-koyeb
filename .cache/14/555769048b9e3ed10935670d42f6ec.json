{"id":"../node_modules/pixi.js/lib/rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs","dependencies":[{"name":"/Users/adamjones/Development/aj91-koyeb/node_modules/pixi.js/lib/rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs.map","includedInParent":true,"mtime":1730294322875},{"name":"/Users/adamjones/Development/aj91-koyeb/package.json","includedInParent":true,"mtime":1730294323806},{"name":"/Users/adamjones/Development/aj91-koyeb/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1730294322533},{"name":"./const.mjs","loc":{"line":1,"column":29,"index":29},"parent":"/Users/adamjones/Development/aj91-koyeb/node_modules/pixi.js/lib/rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs","resolved":"/Users/adamjones/Development/aj91-koyeb/node_modules/pixi.js/lib/rendering/renderers/shared/state/const.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAdjustedBlendModeBlend = getAdjustedBlendModeBlend;\nvar _const = require(\"./const.mjs\");\n\"use strict\";\nfunction getAdjustedBlendModeBlend(blendMode, textureSource) {\n  if (textureSource.alphaMode === \"no-premultiply-alpha\") {\n    return _const.BLEND_TO_NPM[blendMode] || blendMode;\n  }\n  return blendMode;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":13,"column":16},"generated":{"line":9,"column":0}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":13,"column":16},"generated":{"line":9,"column":9}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":13,"column":16},"generated":{"line":9,"column":34}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":13,"column":42},"generated":{"line":9,"column":35}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":13,"column":42},"generated":{"line":9,"column":44}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":13,"column":66},"generated":{"line":9,"column":46}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":9,"column":59}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":9,"column":61}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":10,"column":2}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":10,"column":6}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":10,"column":19}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":15,"column":22},"generated":{"line":10,"column":20}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":15,"column":22},"generated":{"line":10,"column":29}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":15,"column":36},"generated":{"line":10,"column":34}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":10,"column":56}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":10,"column":58}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":11,"column":4}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":11,"column":11}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":11,"column":30}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":17,"column":29},"generated":{"line":11,"column":31}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":17,"column":67},"generated":{"line":11,"column":40}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":17,"column":72},"generated":{"line":11,"column":41}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":17,"column":72},"generated":{"line":11,"column":45}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":17,"column":72},"generated":{"line":11,"column":54}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":17,"column":72},"generated":{"line":12,"column":2}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":20,"column":11},"generated":{"line":13,"column":2}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":20,"column":11},"generated":{"line":13,"column":9}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":20,"column":11},"generated":{"line":13,"column":18}},{"source":"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":14,"column":0}}],"sources":{"../../../../../src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts":"import { type BLEND_MODES, BLEND_TO_NPM } from './const';\n\nimport type { TextureSource } from '../texture/sources/TextureSource';\n\n/**\n * Adjusts a blend mode for the current alpha mode. Returns the blend mode that works with that format.\n * eg 'normal' blend mode will return 'normal-npm' when rendering with premultiplied alpha.\n * and 'normal' if the texture is already premultiplied (the default)\n * @param blendMode - The blend mode to get the adjusted blend mode for.\n * @param textureSource - The texture to test the format of.\n * @returns - the blend mode that should be used to render this texture correctly based on its alphaMode\n */\nexport function getAdjustedBlendModeBlend(blendMode: BLEND_MODES, textureSource: TextureSource): BLEND_MODES\n{\n    if (textureSource.alphaMode === 'no-premultiply-alpha')\n    {\n        return (BLEND_TO_NPM[blendMode as keyof typeof BLEND_TO_NPM] || blendMode) as BLEND_MODES;\n    }\n\n    return blendMode;\n}\n"},"lineCount":null}},"error":null,"hash":"2002fc6d2155c9101dc6e937504d280d","cacheData":{"env":{}}}